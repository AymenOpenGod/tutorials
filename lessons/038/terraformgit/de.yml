apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
        - name: api
          image: fathallahaymen/petclinic
          resources:
            # Add resource requirements here
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://localhost:5432/petclinic
            - name: SPRING_DATASOURCE_USERNAME
              value: petclinic
            - name: SPRING_DATASOURCE_PASSWORD
              value: petclinic
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: update
          # Add livenessProbe here
        - name: postgresqldb
          image: postgres:14.1
          resources:
            # Add resource requirements here
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: petclinic
            - name: POSTGRES_USER
              value: petclinic
            - name: POSTGRES_DB
              value: petclinic
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - petclinic
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5

---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-service
spec:
  selector:
    app: petclinic
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-loadbalancer
spec:
  selector:
    app: petclinic
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-service-nodeport
spec:
  selector:
    app: petclinic
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  type: NodePort
